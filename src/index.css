#no-owlbear {
  display: flex;
  justify-content: center;
  height: 100vh;
}

#no-owlbear main {
  width: 100%;
  max-width: 631px;
  height: 650px;
}

@media only screen and (width <= 480px) {
  #no-owlbear main {
    align-self: flex-start;
  }

  #upload-button,
  #download-button {
    display: none;
  }
}

#no-owlbear main:has(> .dashboard) {
  align-self: flex-start;
}

html {
  scrollbar-width: none;
}

input,
button,
h1,
h2,
h3,
p {
  margin: 0.5rem;
}

:root {
  background-color: #242424;
  text-rendering: optimizelegibility;
  line-height: 1.5;
  color: #fff;
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color-scheme: light dark;
  font-synthesis: none;
  text-size-adjust: 100%;
}

h1 {
  line-height: 1.1;
  font-size: 3.2em;
}

button {
  transition:
    border-color 0.25s,
    background-color 0.25s;
  border: 3px solid transparent;
  border-radius: 8px;
  background-color: #4c396e;
  cursor: pointer;
  padding: 0.5rem;
  min-height: 38px;
  line-height: 0;
  color: #fff;
  font-family: inherit;
  font-size: 1em;
  font-weight: 500;
}

button#fifth-edition-char {
  background-color: #bf5d5d;
}

button:hover {
  border-color: #b9f;
}

button:active {
  background-color: #8447ff;
}

.react-grid-layout {
  border: 5px solid transparent;
  border-radius: 8px;
  background-color: #5f5f5f;
}

.react-grid-layout .react-grid-item {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: -5px;
  margin-left: -5px;
  border: 2px solid #ba98ff;
  border-radius: 4px;
  background-color: #3a3a3a;
  padding: 0.25rem;
}

.react-grid-item > .react-resizable-handle::after {
  border-right: 2px solid #b9f;
  border-bottom: 2px solid #b9f;
}

.react-grid-layout .react-grid-item #delete-widget {
  display: flex;
  position: absolute;
  top: 1px;
  right: 1px;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.react-grid-layout .react-grid-item #delete-widget img {
  width: 15px;
  height: 15px;
}

#locked-dash .react-grid-layout .react-grid-item #delete-widget {
  display: none;
}

.react-grid-layout
  .react-grid-item#add-widget
  > .react-resizable-handle::after {
  display: none;
}

.react-grid-layout .react-grid-item#add-widget > .react-resizable-handle {
  display: none;
}

.editable-md-widget {
  --basePageBg: #3a3a3a;
  --admonitionTipBg: hsl(187deg 71% 88% / 50%);
  --admonitionTipBorder: hsl(189deg 60% 53% / 50%);
  --admonitionInfoBg: hsl(123deg 45% 90% / 50%);
  --admonitionInfoBorder: hsl(131deg 38% 56% / 50%);
  --admonitionCautionBg: hsl(50deg 100% 81% / 50%);
  --admonitionCautionBorder: hsl(38deg 75% 55% / 50%);
  --admonitionDangerBg: hsl(358deg 100% 93% / 50%);
  --admonitionDangerBorder: hsl(359deg 70% 74% / 50%);
  --admonitionNoteBg: hsl(240deg 10% 92% / 50%);
  --admonitionNoteBorder: hsl(231deg 10% 75% / 50%);

  padding: 0;
  caret-color: #8447ff;
}

/* Border Radius of Admonitions */
.editable-md-widget [data-lexical-decorator="true"] > div {
  border-radius: 6px;
}

/* Had to override dynamically applied Link Dialog styles, to keep the link dialog in one place. */
.mdxeditor-popup-container > div:has(div[class^="_linkDialogPopoverContent"]) {
  top: 590px !important;
  left: 8px !important;
  transform: none !important;
}

/* Shifting the location of the link dialog when it's open */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"]):has(form) {
  top: 412px !important;
  left: 8px !important;
  transform: none !important;
}

/* Styling the Link Dialog */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"])
  > div {
  border: 3px solid #ba98ff;
  background-color: #4c396e;
}

/* Style the displayed link in the Closed Link Dialog  */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"])
  > div
  a[class^="_linkDialogPreviewAnchor"] {
  color: #ba98ff;
}

/* Style the other icons in the Closed Link Dialog */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"])
  > div
  button[class^="_actionButton"]
  > svg {
  fill: #ba98ff;
}

.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"])
  > div
  button[class^="_actionButton"] {
  margin: 0;
}

/* Style the Text Labels in the Open Link Dialog */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"]):has(form)
  label {
  color: #d2bff9;
}

/* Style the button borders of the Open Link Dialog */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"]):has(form)
  button {
  border: none;
}

/* Style the background color of the submit button of the Open Link Dialog */
.mdxeditor-popup-container
  > div:has(div[class^="_linkDialogPopoverContent"]):has(form)
  button[type="submit"] {
  background-color: #8447ff;
}

/* Remove the text highlighting when the link dialog is open. Wasn't lining up with the text correctly. */

/* This also gets rid of the link dialog caret */
.mdxeditor div[class^="_linkDialogAnchor"] {
  display: none;
}

.editable-md-widget span,
.editable-md-widget strong,
.editable-md-widget em {
  color: #fff;
}

.editable-md-widget code span,
.editable-md-widget code strong,
.editable-md-widget code em {
  color: #000;
}

.editable-md-widget blockquote {
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  margin-left: 0.5em;
  border-left: 3px solid #8447ff;
  padding-left: 1em;
  font-weight: 400;
  font-style: italic;
}

.editable-md-widget h1 + p:has(br),
.editable-md-widget h2 + p:has(br),
.editable-md-widget h3 + p:has(br),
.editable-md-widget h4 + p:has(br),
.editable-md-widget h5 + p:has(br),
.editable-md-widget h6 + p:has(br),
.editable-md-widget ul + p:has(br),
.editable-md-widget ol + p:has(br) {
  display: none;
}

.editable-md-widget li[role="checkbox"] {
  text-decoration: none;
}

.editable-md-widget li[role="checkbox"]::before {
  top: 3px;
}

.editable-md-widget li[role="checkbox"]::after {
  top: 6px;
}

.editable-md-widget ul,
.editable-md-widget ol {
  color: #fff;
}

.editable-md-widget a {
  text-decoration: none;
}

.editable-md-widget a span,
.editable-md-widget a strong,
.editable-md-widget a em {
  cursor: pointer;
  color: #8447ff;
  font-weight: bold;
}

.editable-md-widget a span:hover,
.editable-md-widget a strong:hover,
.editable-md-widget a em:hover {
  color: #9773e4;
}

.editable-md-widget hr {
  border-color: #ba98ff;
}

.editable-md-widget th,
.editable-md-widget td {
  --baseBgActive: #ba98ff;
}

.editable-md-widget li[role="checkbox"] {
  --accentSolid: #8447ff;
  --accentBorder: #ba98ff;
}

*[class^="_tableEditor"] *[class^="_tableColumnEditorTrigger"],
*[class^="_tableEditor"] *[class^="_tableRowEditorTrigger"],
*[class^="_tableEditor"] *[class^="_addRowButton"],
*[class^="_tableEditor"] *[class^="_addColumnButton"],
*[class^="_tableEditor"] *[class^="_iconButton"] {
  opacity: 0;
}

.react-grid-layout .react-grid-item#add-widget {
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.25s;
  background-color: #4c2696;
}

.react-grid-layout .react-grid-item#add-widget:hover {
  background-color: #2b194f;
}

.react-grid-layout .react-grid-item#add-widget:active {
  background-color: #8447ff;
}

.react-grid-layout .react-grid-item#add-widget img {
  transform: rotate(45deg);
  width: 20px;
  height: 20px;
}

.react-grid-item {
  overflow: clip;
}

.react-grid-item > div {
  min-width: 4px;
}

.react-grid-item img {
  width: 100%;
  height: auto;
}

.react-grid-item [data-editor-block-type="image"] button {
  display: none;
}

.mdxeditor-toolbar {
  display: none;
}

#toolbar button {
  margin-right: 0.25rem;
}

@media (prefers-color-scheme: light) {
  :root {
    background-color: #d2bff9;
    color: #000;
  }

  .editable-md-widget {
    --basePageBg: #f0e9e9;
    --admonitionTipBg: hsl(187deg 71% 88%);
    --admonitionTipBorder: hsl(189deg 60% 53%);
    --admonitionInfoBg: hsl(123deg 45% 90%);
    --admonitionInfoBorder: hsl(131deg 38% 56%);
    --admonitionCautionBg: hsl(50deg 100% 81%);
    --admonitionCautionBorder: hsl(38deg 75% 55%);
    --admonitionDangerBg: hsl(358deg 100% 93%);
    --admonitionDangerBorder: hsl(359deg 70% 74%);
    --admonitionNoteBg: hsl(240deg 10% 92%);
    --admonitionNoteBorder: hsl(231deg 10% 75%);
  }

  button {
    background-color: #9d73f1;
    color: #000;
  }

  button.icon-button {
    background-color: #4c2696;
  }

  button:hover {
    border-color: #8447ff;
  }

  .react-grid-layout {
    background-color: #9773e4;
  }

  .react-grid-layout .react-grid-item {
    border: 2px solid #8447ff;
    background-color: #fff;
  }

  .react-grid-item > .react-resizable-handle::after {
    border-right: 2px solid #b9f;
    border-bottom: 2px solid #b9f;
  }

  .editable-md-widget span,
  .editable-md-widget strong,
  .editable-md-widget em {
    color: #000;
  }

  .editable-md-widget code span,
  .editable-md-widget code strong,
  .editable-md-widget code em {
    background-color: #3a3a3a;
    color: #fff;
  }

  .editable-md-widget a code span,
  .editable-md-widget a code strong,
  .editable-md-widget a code em {
    color: #8447ff;
  }

  .editable-md-widget ul,
  .editable-md-widget ol {
    color: #000;
  }
}

/* loading animation styles */

.lds-ellipsis {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.lds-ellipsis div {
  position: absolute;
  top: 33px;
  border-radius: 50%;
  background: #fff;
  width: 13px;
  height: 13px;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}

.lds-ellipsis div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}

.lds-ellipsis div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}

.lds-ellipsis div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}

.lds-ellipsis div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}

@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0);
  }
}

@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }

  100% {
    transform: translate(24px, 0);
  }
}
